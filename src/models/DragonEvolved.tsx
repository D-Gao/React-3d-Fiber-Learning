/* eslint-disable @typescript-eslint/no-unused-vars */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/models/Dragon_Evolved.gltf -o src/models/DragonEvolved.tsx --typescript -r public 
*/

import * as THREE from "three";
import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF, SkeletonUtils } from "three-stdlib";

type ActionName =
  | "Death"
  | "Fast_Flying"
  | "Flying_Idle"
  | "Headbutt"
  | "HitReact"
  | "No"
  | "Punch"
  | "Yes";

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Cube221: THREE.SkinnedMesh;
    Cube221_1: THREE.SkinnedMesh;
    Cube221_2: THREE.SkinnedMesh;
    Cube221_3: THREE.SkinnedMesh;
    Cube221_4: THREE.SkinnedMesh;
    Root: THREE.Bone;
  };
  materials: {
    Dragon_Main: THREE.MeshStandardMaterial;
    Dragon_Secondary: THREE.MeshStandardMaterial;
    Dragon_Horn: THREE.MeshStandardMaterial;
    Eye_Black: THREE.MeshStandardMaterial;
    Eye_White: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

interface ExtraProps {
  hovered: boolean;
}

export function DragonEvolved({
  hovered,
  ...props
}: JSX.IntrinsicElements["group"] & ExtraProps) {
  const group = React.useRef<THREE.Group>(null);
  const { scene, materials, animations } = useGLTF(
    "/models/Dragon_Evolved.gltf"
  );
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes } = useGraph(clone) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    const anim: ActionName = hovered ? "Headbutt" : "Flying_Idle";

    actions[anim]?.reset().fadeIn(0.5).play();
    return () => {
      actions[anim]?.fadeOut(0.5);
    };
  }, [hovered]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <group name="Dragon">
            <skinnedMesh
              name="Cube221"
              geometry={nodes.Cube221.geometry}
              material={materials.Dragon_Main}
              skeleton={nodes.Cube221.skeleton}
            />
            <skinnedMesh
              name="Cube221_1"
              geometry={nodes.Cube221_1.geometry}
              material={materials.Dragon_Secondary}
              skeleton={nodes.Cube221_1.skeleton}
            />
            <skinnedMesh
              name="Cube221_2"
              geometry={nodes.Cube221_2.geometry}
              material={materials.Dragon_Horn}
              skeleton={nodes.Cube221_2.skeleton}
            />
            <skinnedMesh
              name="Cube221_3"
              geometry={nodes.Cube221_3.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Cube221_3.skeleton}
            />
            <skinnedMesh
              name="Cube221_4"
              geometry={nodes.Cube221_4.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Cube221_4.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Dragon_Evolved.gltf");
